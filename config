servers = (
  {
    address = "irc.efnet.znc";
    autoconnect = "yes";
    chatnet = "efnet";
    password = "zeekay/efnet:ZNC_PASSWORD";
    port = "9242";
    ssl_verify = "no";
    use_ssl = "yes";
  },
  {
    address = "irc.emp.znc";
    autoconnect = "yes";
    chatnet = "emp";
    password = "zeekay/emp:ZNC_PASSWORD";
    port = "9242";
    ssl_verify = "no";
    use_ssl = "yes";
  },
  {
    address = "irc.esper.znc";
    autoconnect = "yes";
    chatnet = "esper";
    password = "zeekay/esper:ZNC_PASSWORD";
    port = "9242";
    ssl_verify = "no";
    use_ssl = "yes";
  },
  {
    address = "irc.freenode.znc";
    autoconnect = "yes";
    chatnet = "freenode";
    password = "zeekay/freenode:ZNC_PASSWORD";
    port = "9242";
    ssl_verify = "no";
    use_ssl = "yes";
  },
  {
    address = "irc.lunarnet.znc";
    autoconnect = "yes";
    chatnet = "lunarnet";
    password = "zeekay/lunarnet:ZNC_PASSWORD";
    port = "9242";
    ssl_verify = "no";
    use_ssl = "yes";
  },
  {
    address = "irc.oftc.znc";
    autoconnect = "yes";
    chatnet = "oftc";
    password = "zeekay/oftc:ZNC_PASSWORD";
    port = "9242";
    ssl_verify = "no";
    use_ssl = "yes";
  },
  {
    address = "irc.dlnetworks.znc";
    autoconnect = "yes";
    chatnet = "dlnetworks";
    password = "zeekay/dlnetworks:ZNC_PASSWORD";
    port = "9242";
    ssl_verify = "no";
    use_ssl = "yes";
  },
  {
    address = "irc.udderweb.znc";
    autoconnect = "yes";
    chatnet = "udderweb";
    password = "zeekay/udderweb:ZNC_PASSWORD";
    port = "9242";
    ssl_verify = "no";
    use_ssl = "yes";
  },
  {
    address = "irc.verus.znc";
    autoconnect = "yes";
    chatnet = "verus";
    password = "zeekay/verus:ZNC_PASSWORD";
    port = "9242";
    ssl_verify = "no";
    use_ssl = "yes";
  },
);

chatnets = {
  emp = { type = "IRC"; };
  esper = { type = "IRC"; };
  freenode = { type = "IRC"; };
  dlnetworks = { type = "IRC"; };
  lunarnet = { type = "IRC"; };
  oftc = { type = "IRC"; };
  udderweb = { type = "IRC"; };
  efnet = { type = "IRC"; };
  verus = { type = "IRC"; };
};

channels = (
  { name = "##javascript"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#/r/"; chatnet = "efnet"; autojoin = "yes"; }
  { name = "#adullam"; chatnet = "udderweb"; autojoin = "yes"; },
  { name = "#coffeescript"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#edmproduction"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#electronic"; chatnet = "emp"; autojoin = "yes"; },
  { name = "#founders"; chatnet = "verus"; autojoin = "yes"; },
  { name = "#go-nuts"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#heapify"; chatnet = "oftc"; autojoin = "yes"; },
  { name = "#node.js"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#production"; chatnet = "dlnetworks"; autojoin = "yes"; },
  { name = "#sancho"; chatnet = "lunarnet"; autojoin = "yes"; },
  { name = "#smth"; chatnet = "esper"; autojoin = "yes"; },
  { name = "#subfm"; chatnet = "dlnetworks"; autojoin = "yes"; },
);

aliases = {
  znc = "query *status";
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WIN = "window";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \" Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  type = "IRC";
  clear = "clear";
  UP = "uptime | say";
  close = "window close";
  nickserv = "quote nickserv $0-";
  chanserv = "quote chanserv $0-";
  memoserv = "quote memoserv $0-";
  helpserv = "quote helpserv $0-";
  operserv = "quote operserv $0-";
  statserv = "quote statserv $0-";
  botserv = "quote botserv $0-";
  chghost = "quote chghost";
  chgident = "quote chgident";
  kline = "quote kline";
  letme = "http://lmgtfy.com/?q=$-1";
  bing = "say ,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.',.'-,.-',.',-',,.,-.','.'''-.',-.-,'.',-,.,.'";
  snatch = "msg boot %download what $-1";
  sowhat = "say ┐(￣ー￣)┌";
  sbg = "scrollback goto";
  sbe = "scrollback end";
  sbs = "scrollback status";
  sbh = "scrollback home";
  hee = "say ( ﾟ◡◡ﾟ)";
  o = "op * -YES";
  SE = "SCRIPT EXEC use Irssi (@Irssi::EXPORT_OK)\\; $0-";
  vm_add = "/^statusbar prompt add -before prompt -alignment left vim_mode";
  vm_del = "/^statusbar prompt remove vim_mode";
  identify = "/^msg nickserv NICKSERV_PASSWORD";
};

statusbar = {
  # formats: when using {templates}, the template is shown only if it's argument isn't empty unless no argument is given. for example {sb} is printed always, but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "%n{sb {sbnickmode $cumode}$N%n{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows, window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top of the screen or at the bottom of the screen. window statusbars are at the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window. contains all the normal items.
    window = {

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        chanact = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "always";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
      disabled = "yes";
    };

    # we treat input line as yet another statusbar :) It's possible to add other items before or after the input line item.

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };

    prompt = {
      items = {
        uberprompt = { priority = "-1"; };
        input = { priority = "10"; };
        vim_mode = { };
      };
      position = "100";
    };
  };
};
settings = {
  core = {
    real_name = "zk";
    user_name = "zk";
    nick = "zk";
    server_reconnect_time = "60";
    recode_autodetect_utf8 = "yes";
    recode_fallback = "ISO8859-2";
    recode_transliterate = "yes";
    recode = "yes";
  };
  "fe-text" = {
    term_force_colors = "yes";
    lag_min_show = "1000ms";
    indent = "10";
    actlist_sort = "refnum";
    actlist_names = "no";
  };
  "fe-common/core" = {
    autocreate_own_query = "yes";
    autocreate_query_level = "msg dcc dccmsgs";
    use_msgs_window = "no";
    use_status_window = "yes";
    autolog = "no";
    show_nickmode = "yes";
    show_quit_once = "no";
    completion_auto = "no";
    show_nickmode_empty = "no";
    autoclose_query = "0";
    term_charset = "utf-8";
    theme = "default";
    bell_beeps = "no";
    beep_msg_level = "DCC";
    beep_when_window_active = "no";
    hilight_level = "PUBLIC DCCMSGS MSGS";
    activity_hilight_level = "hilight msg";
    print_active_channel = "yes";
    activity_msg_level = "MSG";
    activity_hide_level = "joins parts quits nicks modes topic";
    hilight_act_color = "%M";
    activity_hide_targets = "#electronic #node.js ##javascript #subfm #coffeescript #go-nuts #edmproduction";
    completion_char = ",";
  };
  "irc/core" = {
    skip_motd = "yes";
    lag_max_before_disconnect = "300";
    alternate_nick = "zeekay";
  };
  "irc/dcc" = {
    dcc_autoget = "yes";
    dcc_autoresume = "yes";
    dcc_autoget_max_size = "0k";
    dcc_download_path = "/home/zk/downloads";
    dcc_port = "4000";
    dcc_mirc_ctcp = "yes";
    dcc_autoaccept_lowports = "yes";
  };
  "perl/core/scripts" = {
    chanact_abbreviate_names = "3";
    lastfm_user = "alwaysafool";
    lastfm_use_action = "no";
    lastfm_output = "np: %artist - %name (%url)";
    niq_show_in_statusbar = "yes";
    niq_hide_on_inactive = "yes";
    url_log_size = "25";
    url_log_file = "/home/zk/.irssi/url_log";
    url_log = "yes";
    remotegrowl_host = "fool";
    remotegrowl_image = "/Users/zk/.irssi-growl/irssi-white.png";
    remotegrowl_path = "/Users/zk/.irssi-growl/remote-notify.pl";
    remotegrowl_msg_enabled = "yes";
    remotegrowl_hilight_enabled = "yes";
    remotegrowl_sticky = "no";
    chanact_autorenumber = "yes";
    chanact_chop_status = "yes";
    chanact_display = "$H$N:$M$C$S";
    chanact_display_alias = "$H$N$M$S";
    chanact_renumber_start = "50";
    chanact_separator = " ";
    chanact_header = ":: ";
    uberprompt_format_empty = "› ";
    uberprompt_format = "›$uber";
    uberprompt_use_replaces = "no";
    uberprompt_load_hook = "/^vm_add";
    uberprompt_unload_hook = "/^vm_del";
  };
};

hilights = (
  { text = "STARTS IN::"; nick = "yes"; word = "yes"; },
  { text = "zeekay"; nick = "yes"; word = "yes"; },
  { text = "monoid"; nick = "yes"; word = "yes"; }
);

keyboard = (
  { key = "meta-s"; id = "command"; data = "_spellcheck "; }
);

ignores = (
  { level = "ALL"; mask = "MODES";  servertag = "verus"; },
  { level = "ALL"; mask = "VOICE";  servertag = "verus"; },
  { level = "ALL"; mask = "VOICES"; servertag = "verus"; },
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "##javascript" ); }
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "#coffeescript" ); }
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "#edmproduction" ); }
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "#go-nuts" ); },
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "#haskell" ); },
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "#koajs" ); },
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "#node.js" ); },
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "#nothaskell" ); },
  { level = "JOINS PARTS QUITS NICKS"; channels = ( "#python" ); }
);

windows = {
  1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#smth";
        tag = "esper";
      }
    );
  };
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#founders";
        tag = "verus";
      }
    );
  };
  4 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#subfm";
        tag = "dlnetworks";
      }
    );
  };
  5 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#electronic";
        tag = "emp";
      }
    );
  };
  6 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#production";
        tag = "dlnetworks";
      }
    );
  };
  7 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#adullam";
        tag = "udderweb";
      }
    );
  };
  8 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#heapify";
        tag = "oftc";
      }
    );
  };
  9 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#/r/";
        tag = "efnet";
      }
    );
  };
  10 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "##javascript";
        tag = "freenode";
      }
    );
  };
  11 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#coffeescript";
        tag = "freenode";
      }
    );
  };
  12 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#Node.js";
        tag = "freenode";
      }
    );
  };
  13 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#go-nuts";
        tag = "freenode";
      }
    );
  };
  14 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#edmproduction";
        tag = "freenode";
      }
    );
  };
};
mainwindows = { 1 = { first_line = "1"; lines = "43"; }; };

# vim:ft=perl
